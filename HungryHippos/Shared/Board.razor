@inject GameLogic gameInfo

<h3>Game State: @gameInfo.CurrentGameState</h3>

<table>
    @for (int row = 0; row < gameInfo.MaxRows; row++)
    {
        <tr>
            @for (int col = 0; col < gameInfo.MaxCols; col++)
            {
                var cell = gameInfo.GetCell(row, col) ?? throw new CellNotFoundException();

                <td>
                    @(cell.OccupiedBy?.Id.ToString() ?? (cell.IsPillAvailable ? (SharedState?.CellIcon ?? "?") : " "))
                </td>
            }
        </tr>
    }
</table>

@code {
    const string UnicodeFigureSpace_U2007 = " ";

    [CascadingParameter]
    public SharedStateClass SharedState{  get;  set; }

    protected override void OnInitialized()
    {
        gameInfo.GameStateChanged += (_, _) => InvokeAsync(() => StateHasChanged());
    }
}
