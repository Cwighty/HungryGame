@inject GameInfo gameInfo
<EditForm Model="@NewGame" OnValidSubmit="@HandleValidSubmit">
    <label>
        Rows
        <InputNumber DisplayName="Rows" @bind-Value="NewGame.NumRows" size="4" />
    </label>
    <label>
        Columns
        <InputNumber DisplayName="Columns" @bind-Value="NewGame.NumColumns" size="4" />
    </label>
    <label>
        Cell Icon
        <InputText DisplayName="Cell Icon" @bind-Value="NewGame.CellIcon" size="2" maxlength="2" />
    </label>
    <label>
        Secret Code
        <InputText type="password" DisplayName="Secret Code" @bind-Value="NewGame.SecretCode" size="8" />
    </label>
    <button type="submit">Start Game</button>
</EditForm>

@code
{
    private class NewGameInfo
    {
        public int NumRows { get; set; } = 15;
        public int NumColumns { get; set; } = 15;
        public string SecretCode { get; set; } = string.Empty;
        public string CellIcon { get; set; } = "🌯";
    }
    private NewGameInfo NewGame = new();

    [CascadingParameter]
    public SharedStateClass SharedState{  get;  set; }

    private async Task HandleValidSubmit()
    {
        SharedState.CellIcon = NewGame.CellIcon;
        gameInfo.StartGame(NewGame.NumRows, NewGame.NumColumns, NewGame.SecretCode);
    }
}